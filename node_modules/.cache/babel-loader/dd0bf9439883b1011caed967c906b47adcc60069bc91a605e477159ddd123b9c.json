{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZafar\\\\DotNet\\\\Project\\\\BobsTacos-Frontend\\\\src\\\\routes\\\\UpdateMenuItem2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateMenuItem = _ref => {\n  _s();\n  let {\n    menuItemId\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    price: 0,\n    deliveryTime: 0\n  });\n  useEffect(() => {\n    fetchMenuItemData(menuItemId);\n  }, [menuItemId]);\n  const fetchMenuItemData = async id => {\n    try {\n      const response = await fetch(`https://localhost:7027/MenuItem/put/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'bearer' + token\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch menu item data');\n      }\n      const data = await response.json();\n      setFormData({\n        name: data.name,\n        price: data.price,\n        deliveryTime: data.deliveryTime\n      });\n    } catch (error) {\n      console.error('Error fetching menu item data:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  let token = sessionStorage.getItem('token');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://localhost:7027/MenuItem/put/${menuItemId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'bearer ' + token,\n          // Add a space after 'bearer'\n          'Content-Type': 'application/json' // Specify content type\n        },\n\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to update menu item: ${response.status} ${response.statusText}`);\n      }\n      const updatedMenuItem = await response.json();\n      console.log('Menu item updated successfully:', updatedMenuItem);\n    } catch (error) {\n      console.error('Error updating menu item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: formData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"deliveryTime\",\n        placeholder: \"Delivery Time\",\n        value: formData.deliveryTime,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateMenuItem, \"J0DXZrykMvaRuZqBlZ4ejVTGUHg=\");\n_c = UpdateMenuItem;\nexport default UpdateMenuItem;\nvar _c;\n$RefreshReg$(_c, \"UpdateMenuItem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateMenuItem","_ref","_s","menuItemId","formData","setFormData","name","price","deliveryTime","fetchMenuItemData","id","response","fetch","method","headers","token","ok","Error","data","json","error","console","handleChange","e","value","target","sessionStorage","getItem","handleSubmit","preventDefault","body","JSON","stringify","status","statusText","updatedMenuItem","log","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AZafar/DotNet/Project/BobsTacos-Frontend/src/routes/UpdateMenuItem2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UpdateMenuItem = ({ menuItemId }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    price: 0,\r\n    deliveryTime: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchMenuItemData(menuItemId);\r\n  }, [menuItemId]);\r\n\r\n  const fetchMenuItemData = async (id) => {\r\n    try {\r\n      const response = await fetch(`https://localhost:7027/MenuItem/put/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': 'bearer' + token\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch menu item data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setFormData({\r\n        name: data.name,\r\n        price: data.price,\r\n        deliveryTime: data.deliveryTime\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching menu item data:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  let token = sessionStorage.getItem('token');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch(`https://localhost:7027/MenuItem/put/${menuItemId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': 'bearer ' + token, // Add a space after 'bearer'\r\n          'Content-Type': 'application/json', // Specify content type\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update menu item: ${response.status} ${response.statusText}`);\r\n      }\r\n  \r\n      const updatedMenuItem = await response.json();\r\n      console.log('Menu item updated successfully:', updatedMenuItem);\r\n    } catch (error) {\r\n      console.error('Error updating menu item:', error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleChange} />\r\n        <input type=\"number\" name=\"price\" placeholder=\"Price\" value={formData.price} onChange={handleChange} />\r\n        <input type=\"number\" name=\"deliveryTime\" placeholder=\"Delivery Time\" value={formData.deliveryTime} onChange={handleChange} />\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMenuItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}