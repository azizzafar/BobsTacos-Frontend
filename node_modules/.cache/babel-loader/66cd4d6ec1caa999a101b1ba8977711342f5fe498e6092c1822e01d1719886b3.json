{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AZafar\\\\DotNet\\\\Project\\\\BobsTacos-Frontend\\\\src\\\\routes\\\\UpdateMenuItem2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateMenuItem = _ref => {\n  _s();\n  let {\n    menuItemId\n  } = _ref;\n  const [formData, setFormData] = useState({\n    name: '',\n    price: 0,\n    deliveryTime: 0\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const token = sessionStorage.getItem('token');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://localhost:7027/MenuItem/put/${menuItemId}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + token,\n          // Add a space after 'Bearer'\n          'Content-Type': 'application/json' // Specify content type\n        },\n\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to update menu item: ${response.status} ${response.statusText}`);\n      }\n      const updatedMenuItem = await response.json();\n      console.log('Menu item updated successfully:', updatedMenuItem);\n    } catch (error) {\n      console.error('Error updating menu item:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        value: formData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"deliveryTime\",\n        placeholder: \"Delivery Time\",\n        value: formData.deliveryTime,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateMenuItem, \"BnQdqbz19xErYMmzzBBjpI4JTnE=\");\n_c = UpdateMenuItem;\nexport default UpdateMenuItem;\nvar _c;\n$RefreshReg$(_c, \"UpdateMenuItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpdateMenuItem","_ref","_s","menuItemId","formData","setFormData","name","price","deliveryTime","handleChange","e","value","target","token","sessionStorage","getItem","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","statusText","updatedMenuItem","json","console","log","error","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AZafar/DotNet/Project/BobsTacos-Frontend/src/routes/UpdateMenuItem2.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UpdateMenuItem = ({ menuItemId }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    price: 0,\r\n    deliveryTime: 0\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const token = sessionStorage.getItem('token');\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`https://localhost:7027/MenuItem/put/${menuItemId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': 'Bearer ' + token, // Add a space after 'Bearer'\r\n          'Content-Type': 'application/json', // Specify content type\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to update menu item: ${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      const updatedMenuItem = await response.json();\r\n      console.log('Menu item updated successfully:', updatedMenuItem);\r\n    } catch (error) {\r\n      console.error('Error updating menu item:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleChange} />\r\n        <input type=\"number\" name=\"price\" placeholder=\"Price\" value={formData.price} onChange={handleChange} />\r\n        <input type=\"number\" name=\"deliveryTime\" placeholder=\"Delivery Time\" value={formData.deliveryTime} onChange={handleChange} />\r\n        <button type=\"submit\">Update</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMenuItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}